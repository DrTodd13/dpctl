
.. _program_listing_file_backends_include_dppl_sycl_queue_manager.h:

Program Listing for File dppl_sycl_queue_manager.h
==================================================

|exhale_lsh| :ref:`Return to documentation for file <file_backends_include_dppl_sycl_queue_manager.h>` (``backends/include/dppl_sycl_queue_manager.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   //===----------- dppl_sycl_queue_manager.h - dpctl-C_API ---*---C++ ---*---===//
   //
   //               Data Parallel Control Library (dpCtl)
   //
   // Copyright 2020 Intel Corporation
   //
   // Licensed under the Apache License, Version 2.0 (the "License");
   // you may not use this file except in compliance with the License.
   // You may obtain a copy of the License at
   //
   //    http://www.apache.org/licenses/LICENSE-2.0
   //
   // Unless required by applicable law or agreed to in writing, software
   // distributed under the License is distributed on an "AS IS" BASIS,
   // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   // See the License for the specific language governing permissions and
   // limitations under the License.
   //
   //===----------------------------------------------------------------------===//
   //===----------------------------------------------------------------------===//
   
   #pragma once
   
   #include "dppl_data_types.h"
   #include "dppl_sycl_types.h"
   #include "dppl_sycl_context_interface.h"
   #include "dppl_sycl_device_interface.h"
   #include "Support/DllExport.h"
   #include "Support/ExternC.h"
   #include "Support/MemOwnershipAttrs.h"
   
   DPPL_C_EXTERN_C_BEGIN
   
   DPPL_API
   __dppl_give DPPLSyclQueueRef DPPLQueueMgr_GetCurrentQueue ();
   
   DPPL_API
   __dppl_give DPPLSyclQueueRef
   DPPLQueueMgr_GetQueue (DPPLSyclBackendType BETy,
                          DPPLSyclDeviceType DeviceTy,
                          size_t DNum);
   
   DPPL_API
   size_t DPPLQueueMgr_GetNumActivatedQueues ();
   
   DPPL_API
   size_t DPPLQueueMgr_GetNumQueues (DPPLSyclBackendType BETy,
                                     DPPLSyclDeviceType DeviceTy);
   
   DPPL_API
   bool DPPLQueueMgr_IsCurrentQueue (__dppl_keep const DPPLSyclQueueRef QRef);
   
   DPPL_API
   __dppl_give DPPLSyclQueueRef
   DPPLQueueMgr_SetAsDefaultQueue (DPPLSyclBackendType BETy,
                                   DPPLSyclDeviceType DeviceTy,
                                   size_t DNum);
   
   DPPL_API
   __dppl_give DPPLSyclQueueRef
   DPPLQueueMgr_PushQueue (DPPLSyclBackendType BETy,
                           DPPLSyclDeviceType DeviceTy,
                           size_t DNum);
   
   DPPL_API
   void DPPLQueueMgr_PopQueue ();
   
   DPPL_C_EXTERN_C_END
