<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="de/d0e/test__sycl__queue__manager_8cpp" kind="file" language="C++">
    <compoundname>test_sycl_queue_manager.cpp</compoundname>
    <includes refid="d8/d8e/dppl__sycl__context__interface_8h" local="yes">dppl_sycl_context_interface.h</includes>
    <includes refid="d8/d8f/dppl__sycl__device__interface_8h" local="yes">dppl_sycl_device_interface.h</includes>
    <includes refid="d4/d7b/dppl__sycl__queue__interface_8h" local="yes">dppl_sycl_queue_interface.h</includes>
    <includes refid="d0/de9/dppl__sycl__queue__manager_8h" local="yes">dppl_sycl_queue_manager.h</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes local="no">thread</includes>
    <includes local="no">CL/sycl.hpp</includes>
    <incdepgraph>
      <node id="13">
        <label>stdbool.h</label>
      </node>
      <node id="19">
        <label>CL/sycl.hpp</label>
      </node>
      <node id="16">
        <label>dppl_sycl_queue_manager.h</label>
        <link refid="d0/de9/dppl__sycl__queue__manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>dppl_sycl_queue_interface.h</label>
        <link refid="d4/d7b/dppl__sycl__queue__interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>dppl_sycl_device_interface.h</label>
        <link refid="d8/d8f/dppl__sycl__device__interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Support/DllExport.h</label>
        <link refid="d6/d26/DllExport_8h"/>
      </node>
      <node id="10">
        <label>dppl_sycl_enum_types.h</label>
        <link refid="d9/d4f/dppl__sycl__enum__types_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>sys/types.h</label>
      </node>
      <node id="1">
        <label>test_sycl_queue_manager.cpp</label>
        <link refid="de/d0e/test__sycl__queue__manager_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>gtest/gtest.h</label>
      </node>
      <node id="3">
        <label>dppl_data_types.h</label>
        <link refid="d4/dcc/dppl__data__types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>dppl_sycl_types.h</label>
        <link refid="d4/d8f/dppl__sycl__types_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Support/ExternC.h</label>
        <link refid="d2/d0a/ExternC_8h"/>
      </node>
      <node id="9">
        <label>dppl_sycl_platform_interface.h</label>
        <link refid="dd/d6a/dppl__sycl__platform__interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Support/MemOwnershipAttrs.h</label>
        <link refid="d4/d8c/MemOwnershipAttrs_8h"/>
      </node>
      <node id="18">
        <label>thread</label>
      </node>
      <node id="2">
        <label>dppl_sycl_context_interface.h</label>
        <link refid="d8/d8e/dppl__sycl__context__interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="d4/de9/structTestDPPLSyclQueueManager" prot="public">TestDPPLSyclQueueManager</innerclass>
    <innernamespace refid="d8/dcc/namespacestd">std</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="de/d0e/test__sycl__queue__manager_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" line="248" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" bodystart="248" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="de/d0e/test__sycl__queue__manager_8cpp_1a869993a3602a65fd4349df07e3fe69ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(TestDPPLSyclQueueManager, CheckDPPLDumpDeviceInfo)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref></type>
        </param>
        <param>
          <type>CheckDPPLDumpDeviceInfo</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" line="203" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" bodystart="203" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="de/d0e/test__sycl__queue__manager_8cpp_1a6feea6616d62f2ebd94f5cd696272f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(TestDPPLSyclQueueManager, CheckDPPLGetCurrentQueue)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref></type>
        </param>
        <param>
          <type>CheckDPPLGetCurrentQueue</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" line="81" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" bodystart="81" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="de/d0e/test__sycl__queue__manager_8cpp_1a72468fa7f438e85e6923039c0830ef1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(TestDPPLSyclQueueManager, CheckDPPLGetLevel0GpuQ)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref></type>
        </param>
        <param>
          <type>CheckDPPLGetLevel0GpuQ</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" line="140" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" bodystart="140" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="de/d0e/test__sycl__queue__manager_8cpp_1a1ef71342df108d8c433d3b06203d7125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(TestDPPLSyclQueueManager, CheckDPPLGetOpenCLCpuQ)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref></type>
        </param>
        <param>
          <type>CheckDPPLGetOpenCLCpuQ</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" line="92" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" bodystart="92" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="de/d0e/test__sycl__queue__manager_8cpp_1a10a42708108bf863f20bf86fcb7c5f6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(TestDPPLSyclQueueManager, CheckDPPLGetOpenCLGpuQ)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref></type>
        </param>
        <param>
          <type>CheckDPPLGetOpenCLGpuQ</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" line="116" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" bodystart="116" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="de/d0e/test__sycl__queue__manager_8cpp_1a91d23dd0b2002af9b8124594fa03dbd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(TestDPPLSyclQueueManager, CheckGetNumActivatedQueues)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref></type>
        </param>
        <param>
          <type>CheckGetNumActivatedQueues</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" line="164" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" bodystart="164" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="de/d0e/test__sycl__queue__manager_8cpp_1a02b16d34842e3a27871c51c280f36b5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(TestDPPLSyclQueueManager, CheckIsCurrentQueue)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref></type>
        </param>
        <param>
          <type>CheckIsCurrentQueue</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" line="212" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" bodystart="212" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="de/d0e/test__sycl__queue__manager_8cpp_1a55e259e7b785410cf657716135b994f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(TestDPPLSyclQueueManager, CheckIsCurrentQueue2)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref></type>
        </param>
        <param>
          <type>CheckIsCurrentQueue2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" line="229" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp" bodystart="229" bodyend="245"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This file has unit test cases for functions defined in <ref refid="d4/d7b/dppl__sycl__queue__interface_8h" kindref="compound">dppl_sycl_queue_interface.h</ref> and <ref refid="d0/de9/dppl__sycl__queue__manager_8h" kindref="compound">dppl_sycl_queue_manager.h</ref>. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//===-------<sp/>test_sycl_queue_manager.cpp<sp/>-<sp/>dpctl-C_API<sp/>---*---<sp/>C++<sp/>----*---===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data<sp/>Parallel<sp/>Control<sp/>Library<sp/>(dpCtl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2020<sp/>Intel<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d8e/dppl__sycl__context__interface_8h" kindref="compound">dppl_sycl_context_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d8f/dppl__sycl__device__interface_8h" kindref="compound">dppl_sycl_device_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d7b/dppl__sycl__queue__interface_8h" kindref="compound">dppl_sycl_queue_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d0/de9/dppl__sycl__queue__manager_8h" kindref="compound">dppl_sycl_queue_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CL/sycl.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">cl::sycl;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>foo<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;<sp/>num)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>q1<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302aa41f7995c46f3b674e94c0fc63515883" kindref="member">DPPL_CPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>q2<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Capture<sp/>the<sp/>number<sp/>of<sp/>active<sp/>queues<sp/>in<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>num<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a6562c651a4f1d10abc84e36f9d840040" kindref="member">DPPLQueueMgr_GetNumActivatedQueues</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(q1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(q2);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bar<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;<sp/>num)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>q1<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Capture<sp/>the<sp/>number<sp/>of<sp/>active<sp/>queues<sp/>in<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>num<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a6562c651a4f1d10abc84e36f9d840040" kindref="member">DPPLQueueMgr_GetNumActivatedQueues</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(q1);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_devices<sp/>()</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;p<sp/>:<sp/>platform::get_platforms())<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.is_host())</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!p.get_devices().empty())<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="d4/de9/structTestDPPLSyclQueueManager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>::testing::Test</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{<sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="de/d0e/test__sycl__queue__manager_8cpp_1a6feea6616d62f2ebd94f5cd696272f6f" refkind="member"><highlight class="normal"><ref refid="de/d0e/test__sycl__queue__manager_8cpp_1a6feea6616d62f2ebd94f5cd696272f6f" kindref="member">TEST_F</ref><sp/>(<ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref>,<sp/>CheckDPPLGetCurrentQueue)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!has_devices())</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>Sycl<sp/>devices.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d8f/dppl__sycl__types_8h_1ab149964f3e071296799d1c7e15aae5a7" kindref="member">DPPLSyclQueueRef</ref><sp/>q;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_NO_THROW(q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a80b765ec2f49feaba3d781f491061d3b" kindref="member">DPPLQueueMgr_GetCurrentQueue</ref>());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(q<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="de/d0e/test__sycl__queue__manager_8cpp_1a1ef71342df108d8c433d3b06203d7125" refkind="member"><highlight class="normal"><ref refid="de/d0e/test__sycl__queue__manager_8cpp_1a6feea6616d62f2ebd94f5cd696272f6f" kindref="member">TEST_F</ref><sp/>(<ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref>,<sp/>CheckDPPLGetOpenCLCpuQ)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!has_devices())</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>Sycl<sp/>devices.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nOpenCLCpuQ<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302aa41f7995c46f3b674e94c0fc63515883" kindref="member">DPPL_CPU</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!nOpenCLCpuQ)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>OpenCL<sp/>CPU<sp/>device<sp/>found.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a25030bcff6aa416374d49377f4501d1f" kindref="member">DPPLQueueMgr_GetQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302aa41f7995c46f3b674e94c0fc63515883" kindref="member">DPPL_CPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(q<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sycl_q<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">queue*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(q);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>be<sp/>=<sp/>sycl_q-&gt;get_context().get_platform().get_backend();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(be,<sp/>backend::opencl);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>devty<sp/>=<sp/>sycl_q-&gt;get_device().get_info&lt;info::device::device_type&gt;();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(devty,<sp/>info::device_type::cpu);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>non_existent_device_num<sp/>=<sp/>nOpenCLCpuQ<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-existent<sp/>device<sp/>number<sp/>should<sp/>return<sp/>nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>null_q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a25030bcff6aa416374d49377f4501d1f" kindref="member">DPPLQueueMgr_GetQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302aa41f7995c46f3b674e94c0fc63515883" kindref="member">DPPL_CPU</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non_existent_device_num);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(null_q<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="de/d0e/test__sycl__queue__manager_8cpp_1a10a42708108bf863f20bf86fcb7c5f6a" refkind="member"><highlight class="normal"><ref refid="de/d0e/test__sycl__queue__manager_8cpp_1a6feea6616d62f2ebd94f5cd696272f6f" kindref="member">TEST_F</ref><sp/>(<ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref>,<sp/>CheckDPPLGetOpenCLGpuQ)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!has_devices())</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>Sycl<sp/>devices.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nOpenCLGpuQ<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!nOpenCLGpuQ)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>OpenCL<sp/>GPU<sp/>device<sp/>found.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a25030bcff6aa416374d49377f4501d1f" kindref="member">DPPLQueueMgr_GetQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(q<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sycl_q<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">queue*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(q);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>be<sp/>=<sp/>sycl_q-&gt;get_context().get_platform().get_backend();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(be,<sp/>backend::opencl);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>devty<sp/>=<sp/>sycl_q-&gt;get_device().get_info&lt;info::device::device_type&gt;();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(devty,<sp/>info::device_type::gpu);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>non_existent_device_num<sp/>=<sp/>nOpenCLGpuQ<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-existent<sp/>device<sp/>number<sp/>should<sp/>return<sp/>nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>null_q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a25030bcff6aa416374d49377f4501d1f" kindref="member">DPPLQueueMgr_GetQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non_existent_device_num);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(null_q<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="de/d0e/test__sycl__queue__manager_8cpp_1a72468fa7f438e85e6923039c0830ef1c" refkind="member"><highlight class="normal"><ref refid="de/d0e/test__sycl__queue__manager_8cpp_1a6feea6616d62f2ebd94f5cd696272f6f" kindref="member">TEST_F</ref><sp/>(<ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref>,<sp/>CheckDPPLGetLevel0GpuQ)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!has_devices())</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>Sycl<sp/>devices.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nL0GpuQ<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932a9cf919f672faa098e1472bef6bb9766a" kindref="member">DPPL_LEVEL_ZERO</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!nL0GpuQ)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>OpenCL<sp/>GPU<sp/>device<sp/>found.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a25030bcff6aa416374d49377f4501d1f" kindref="member">DPPLQueueMgr_GetQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932a9cf919f672faa098e1472bef6bb9766a" kindref="member">DPPL_LEVEL_ZERO</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(q<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sycl_q<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">queue*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(q);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>be<sp/>=<sp/>sycl_q-&gt;get_context().get_platform().get_backend();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(be,<sp/>backend::level_zero);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>devty<sp/>=<sp/>sycl_q-&gt;get_device().get_info&lt;info::device::device_type&gt;();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(devty,<sp/>info::device_type::gpu);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>non_existent_device_num<sp/>=<sp/>nL0GpuQ<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-existent<sp/>device<sp/>number<sp/>should<sp/>return<sp/>nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>null_q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a25030bcff6aa416374d49377f4501d1f" kindref="member">DPPLQueueMgr_GetQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932a9cf919f672faa098e1472bef6bb9766a" kindref="member">DPPL_LEVEL_ZERO</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non_existent_device_num);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(null_q<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="de/d0e/test__sycl__queue__manager_8cpp_1a91d23dd0b2002af9b8124594fa03dbd4" refkind="member"><highlight class="normal"><ref refid="de/d0e/test__sycl__queue__manager_8cpp_1a6feea6616d62f2ebd94f5cd696272f6f" kindref="member">TEST_F</ref><sp/>(<ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref>,<sp/>CheckGetNumActivatedQueues)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!has_devices())</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>Sycl<sp/>devices.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num0,<sp/>num1,<sp/>num2,<sp/>num4;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nOpenCLCpuQ<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302aa41f7995c46f3b674e94c0fc63515883" kindref="member">DPPL_CPU</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nOpenCLGpuQ<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nL0GpuQ<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932a9cf919f672faa098e1472bef6bb9766a" kindref="member">DPPL_LEVEL_ZERO</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>queue<sp/>to<sp/>main<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!nOpenCLCpuQ<sp/>||<sp/>!nOpenCLGpuQ)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping<sp/>as<sp/>no<sp/>OpenCL<sp/>GPU<sp/>device<sp/>found.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302aa41f7995c46f3b674e94c0fc63515883" kindref="member">DPPL_CPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>std::thread<sp/>first<sp/>(foo,<sp/>std::ref(num1));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>std::thread<sp/>second<sp/>(bar,<sp/>std::ref(num2));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>synchronize<sp/>threads:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>first.join();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>second.join();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Capture<sp/>the<sp/>number<sp/>of<sp/>active<sp/>queues<sp/>in<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>num0<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a6562c651a4f1d10abc84e36f9d840040" kindref="member">DPPLQueueMgr_GetNumActivatedQueues</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>num4<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a6562c651a4f1d10abc84e36f9d840040" kindref="member">DPPLQueueMgr_GetNumActivatedQueues</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>what<sp/>the<sp/>expected<sp/>number<sp/>of<sp/>activated<sp/>queues<sp/>each<sp/>time<sp/>a<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>getNumActivatedQueues.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(num0,<sp/>1);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(num1,<sp/>2);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(num2,<sp/>1);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(num4,<sp/>0);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(q);</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="de/d0e/test__sycl__queue__manager_8cpp_1a869993a3602a65fd4349df07e3fe69ff" refkind="member"><highlight class="normal"><ref refid="de/d0e/test__sycl__queue__manager_8cpp_1a6feea6616d62f2ebd94f5cd696272f6f" kindref="member">TEST_F</ref><sp/>(<ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref>,<sp/>CheckDPPLDumpDeviceInfo)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!has_devices())</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>Sycl<sp/>devices.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a80b765ec2f49feaba3d781f491061d3b" kindref="member">DPPLQueueMgr_GetCurrentQueue</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NO_FATAL_FAILURE(<ref refid="d8/d8f/dppl__sycl__device__interface_8h_1a8e5a51fbff19a8dc532a970e88c96237" kindref="member">DPPLDevice_DumpInfo</ref>(<ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1ae0f08839c2c9f3876e55564e517afda5" kindref="member">DPPLQueue_GetDevice</ref>(q)));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_NO_FATAL_FAILURE(<ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(q));</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="de/d0e/test__sycl__queue__manager_8cpp_1a02b16d34842e3a27871c51c280f36b5a" refkind="member"><highlight class="normal"><ref refid="de/d0e/test__sycl__queue__manager_8cpp_1a6feea6616d62f2ebd94f5cd696272f6f" kindref="member">TEST_F</ref><sp/>(<ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref>,<sp/>CheckIsCurrentQueue)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!has_devices())</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>Sycl<sp/>devices.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>))</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>OpenCL<sp/>GPU.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q0<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a80b765ec2f49feaba3d781f491061d3b" kindref="member">DPPLQueueMgr_GetCurrentQueue</ref>();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1af9d22f892ea2bff7196f8e4494fc9a17" kindref="member">DPPLQueueMgr_IsCurrentQueue</ref>(Q0));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q1<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1af9d22f892ea2bff7196f8e4494fc9a17" kindref="member">DPPLQueueMgr_IsCurrentQueue</ref>(Q1));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Q1);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1af9d22f892ea2bff7196f8e4494fc9a17" kindref="member">DPPLQueueMgr_IsCurrentQueue</ref>(Q0));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Q0);</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="de/d0e/test__sycl__queue__manager_8cpp_1a55e259e7b785410cf657716135b994f6" refkind="member"><highlight class="normal"><ref refid="de/d0e/test__sycl__queue__manager_8cpp_1a6feea6616d62f2ebd94f5cd696272f6f" kindref="member">TEST_F</ref><sp/>(<ref refid="d4/de9/structTestDPPLSyclQueueManager" kindref="compound">TestDPPLSyclQueueManager</ref>,<sp/>CheckIsCurrentQueue2)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302aa41f7995c46f3b674e94c0fc63515883" kindref="member">DPPL_CPU</ref>)<sp/>||</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>))</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>OpenCL<sp/>GPU<sp/>and<sp/>OpenCL<sp/>CPU.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q1<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1af9d22f892ea2bff7196f8e4494fc9a17" kindref="member">DPPLQueueMgr_IsCurrentQueue</ref>(Q1));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q2<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302aa41f7995c46f3b674e94c0fc63515883" kindref="member">DPPL_CPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1af9d22f892ea2bff7196f8e4494fc9a17" kindref="member">DPPLQueueMgr_IsCurrentQueue</ref>(Q2));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1af9d22f892ea2bff7196f8e4494fc9a17" kindref="member">DPPLQueueMgr_IsCurrentQueue</ref>(Q1));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Q2);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1af9d22f892ea2bff7196f8e4494fc9a17" kindref="member">DPPLQueueMgr_IsCurrentQueue</ref>(Q1));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Q1);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="de/d0e/test__sycl__queue__manager_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"><ref refid="de/d0e/test__sycl__queue__manager_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_manager.cpp"/>
  </compounddef>
</doxygen>
