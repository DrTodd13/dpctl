<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d4/d9f/test__sycl__queue__interface_8cpp" kind="file" language="C++">
    <compoundname>test_sycl_queue_interface.cpp</compoundname>
    <includes refid="d8/d8e/dppl__sycl__context__interface_8h" local="yes">dppl_sycl_context_interface.h</includes>
    <includes refid="da/d2c/dppl__sycl__event__interface_8h" local="yes">dppl_sycl_event_interface.h</includes>
    <includes refid="dc/d31/dppl__sycl__kernel__interface_8h" local="yes">dppl_sycl_kernel_interface.h</includes>
    <includes refid="d1/d3d/dppl__sycl__program__interface_8h" local="yes">dppl_sycl_program_interface.h</includes>
    <includes refid="d4/d7b/dppl__sycl__queue__interface_8h" local="yes">dppl_sycl_queue_interface.h</includes>
    <includes refid="d0/de9/dppl__sycl__queue__manager_8h" local="yes">dppl_sycl_queue_manager.h</includes>
    <includes refid="dc/d46/dppl__sycl__usm__interface_8h" local="yes">dppl_sycl_usm_interface.h</includes>
    <includes refid="d1/d38/CBindingWrapping_8h" local="yes">Support/CBindingWrapping.h</includes>
    <includes local="no">CL/sycl.hpp</includes>
    <includes local="no">gtest/gtest.h</includes>
    <incdepgraph>
      <node id="13">
        <label>stdbool.h</label>
      </node>
      <node id="22">
        <label>CL/sycl.hpp</label>
      </node>
      <node id="18">
        <label>dppl_sycl_queue_manager.h</label>
        <link refid="d0/de9/dppl__sycl__queue__manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>dppl_sycl_queue_interface.h</label>
        <link refid="d4/d7b/dppl__sycl__queue__interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>test_sycl_queue_interface.cpp</label>
        <link refid="d4/d9f/test__sycl__queue__interface_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>dppl_sycl_usm_interface.h</label>
        <link refid="dc/d46/dppl__sycl__usm__interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>dppl_sycl_event_interface.h</label>
        <link refid="da/d2c/dppl__sycl__event__interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Support/CBindingWrapping.h</label>
        <link refid="d1/d38/CBindingWrapping_8h"/>
      </node>
      <node id="15">
        <label>dppl_sycl_kernel_interface.h</label>
        <link refid="dc/d31/dppl__sycl__kernel__interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>dppl_sycl_device_interface.h</label>
        <link refid="d8/d8f/dppl__sycl__device__interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Support/DllExport.h</label>
        <link refid="d6/d26/DllExport_8h"/>
      </node>
      <node id="10">
        <label>dppl_sycl_enum_types.h</label>
        <link refid="d9/d4f/dppl__sycl__enum__types_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>dppl_sycl_program_interface.h</label>
        <link refid="d1/d3d/dppl__sycl__program__interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>sys/types.h</label>
      </node>
      <node id="23">
        <label>gtest/gtest.h</label>
      </node>
      <node id="3">
        <label>dppl_data_types.h</label>
        <link refid="d4/dcc/dppl__data__types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>dppl_sycl_types.h</label>
        <link refid="d4/d8f/dppl__sycl__types_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Support/ExternC.h</label>
        <link refid="d2/d0a/ExternC_8h"/>
      </node>
      <node id="9">
        <label>dppl_sycl_platform_interface.h</label>
        <link refid="dd/d6a/dppl__sycl__platform__interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Support/MemOwnershipAttrs.h</label>
        <link refid="d4/d8c/MemOwnershipAttrs_8h"/>
      </node>
      <node id="2">
        <label>dppl_sycl_context_interface.h</label>
        <link refid="d8/d8e/dppl__sycl__context__interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="d3/d4d/structTestDPPLSyclQueueInterface" prot="public">TestDPPLSyclQueueInterface</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="d4/d9f/test__sycl__queue__interface_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_interface.cpp" line="381" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_interface.cpp" bodystart="381" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="d4/d9f/test__sycl__queue__interface_8cpp_1acab29cb6a262cd79c092fe0db8d2c5d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(TestDPPLSyclQueueInterface, CheckAreEq)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="d3/d4d/structTestDPPLSyclQueueInterface" kindref="compound">TestDPPLSyclQueueInterface</ref></type>
        </param>
        <param>
          <type>CheckAreEq</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_interface.cpp" line="106" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_interface.cpp" bodystart="106" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="d4/d9f/test__sycl__queue__interface_8cpp_1a77f389934818f19c83b47eb977330601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(TestDPPLSyclQueueInterface, CheckAreEq2)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="d3/d4d/structTestDPPLSyclQueueInterface" kindref="compound">TestDPPLSyclQueueInterface</ref></type>
        </param>
        <param>
          <type>CheckAreEq2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_interface.cpp" line="145" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_interface.cpp" bodystart="145" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="d4/d9f/test__sycl__queue__interface_8cpp_1ab0bac1a57c9d00ce0c7d45fdb2cde277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(TestDPPLSyclQueueInterface, CheckGetBackend)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="d3/d4d/structTestDPPLSyclQueueInterface" kindref="compound">TestDPPLSyclQueueInterface</ref></type>
        </param>
        <param>
          <type>CheckGetBackend</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_interface.cpp" line="171" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_interface.cpp" bodystart="171" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="d4/d9f/test__sycl__queue__interface_8cpp_1a73dcfe3cda4c4fc54a8638bcd59f1fc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(TestDPPLSyclQueueInterface, CheckGetContext)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="d3/d4d/structTestDPPLSyclQueueInterface" kindref="compound">TestDPPLSyclQueueInterface</ref></type>
        </param>
        <param>
          <type>CheckGetContext</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_interface.cpp" line="204" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_interface.cpp" bodystart="204" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="d4/d9f/test__sycl__queue__interface_8cpp_1aa703748673ed37e52efc5cf783460e6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(TestDPPLSyclQueueInterface, CheckGetDevice)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="d3/d4d/structTestDPPLSyclQueueInterface" kindref="compound">TestDPPLSyclQueueInterface</ref></type>
        </param>
        <param>
          <type>CheckGetDevice</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_interface.cpp" line="241" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_interface.cpp" bodystart="241" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="d4/d9f/test__sycl__queue__interface_8cpp_1a944349c9eb0ff91e6903c8243d30ba56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_F</definition>
        <argsstring>(TestDPPLSyclQueueInterface, CheckSubmit)</argsstring>
        <name>TEST_F</name>
        <param>
          <type><ref refid="d3/d4d/structTestDPPLSyclQueueInterface" kindref="compound">TestDPPLSyclQueueInterface</ref></type>
        </param>
        <param>
          <type>CheckSubmit</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_interface.cpp" line="281" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_interface.cpp" bodystart="281" bodyend="378"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This file has unit test cases for functions defined in <ref refid="d4/d7b/dppl__sycl__queue__interface_8h" kindref="compound">dppl_sycl_queue_interface.h</ref>. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//===--------<sp/>test_sycl_queue_interface.cpp<sp/>-<sp/>dpctl-C_API<sp/>---*---<sp/>C++<sp/>--*--===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data<sp/>Parallel<sp/>Control<sp/>Library<sp/>(dpCtl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2020<sp/>Intel<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d8e/dppl__sycl__context__interface_8h" kindref="compound">dppl_sycl_context_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/d2c/dppl__sycl__event__interface_8h" kindref="compound">dppl_sycl_event_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dc/d31/dppl__sycl__kernel__interface_8h" kindref="compound">dppl_sycl_kernel_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d1/d3d/dppl__sycl__program__interface_8h" kindref="compound">dppl_sycl_program_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d7b/dppl__sycl__queue__interface_8h" kindref="compound">dppl_sycl_queue_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d0/de9/dppl__sycl__queue__manager_8h" kindref="compound">dppl_sycl_queue_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dc/d46/dppl__sycl__usm__interface_8h" kindref="compound">dppl_sycl_usm_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d1/d38/CBindingWrapping_8h" kindref="compound">Support/CBindingWrapping.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CL/sycl.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">cl::sycl;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>SIZE<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="d1/d38/CBindingWrapping_8h_1a65c769c08fa9fee7f298ad9c9eee5e05" kindref="member">DEFINE_SIMPLE_CONVERSION_FUNCTIONS</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/><ref refid="d4/d8f/dppl__sycl__types_8h_1a2cb2ce60eb645f7b35c3ea60fe153a2e" kindref="member">DPPLSyclUSMRef</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add_kernel_checker<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*c)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0ul;<sp/>i<sp/>&lt;<sp/>SIZE;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(c[i],<sp/>a[i]<sp/>+<sp/>b[i]);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>axpy_kernel_checker<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*c,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0ul;<sp/>i<sp/>&lt;<sp/>SIZE;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(c[i],<sp/>a[i]<sp/>+<sp/>d*b[i]);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_devices<sp/>()</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;p<sp/>:<sp/>platform::get_platforms())<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.is_host())</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!p.get_devices().empty())<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="d3/d4d/structTestDPPLSyclQueueInterface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d3/d4d/structTestDPPLSyclQueueInterface" kindref="compound">TestDPPLSyclQueueInterface</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>::testing::Test</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80" refid="d3/d4d/structTestDPPLSyclQueueInterface_1a76f54fdd0cedcfcac1f09a94caed2a81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*CLProgramStr<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;CLC(</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernel<sp/>void<sp/>init_arr<sp/>(global<sp/>float<sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>index<sp/>=<sp/>get_global_id(0);</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[index]<sp/>=<sp/>(float)index;</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernel<sp/>void<sp/>add<sp/>(global<sp/>float*<sp/>a,<sp/>global<sp/>float*<sp/>b,<sp/>global<sp/>float*<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>index<sp/>=<sp/>get_global_id(0);</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[index]<sp/>=<sp/>a[index]<sp/>+<sp/>b[index];</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernel<sp/>void<sp/>axpy<sp/>(global<sp/>float*<sp/>a,<sp/>global<sp/>float*<sp/>b,</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global<sp/>float*<sp/>c,<sp/>float<sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>index<sp/>=<sp/>get_global_id(0);</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[index]<sp/>=<sp/>a[index]<sp/>+<sp/>d*b[index];</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>)CLC&quot;;</highlight></codeline>
<codeline lineno="97" refid="d3/d4d/structTestDPPLSyclQueueInterface_1ad846a19ba77bc79ed087ac701eda1404" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*CompileOpts<sp/>=</highlight><highlight class="stringliteral">&quot;-cl-fast-relaxed-math&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="d3/d4d/structTestDPPLSyclQueueInterface_1a24c6eb590e33102910ca89c30547f404" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d4d/structTestDPPLSyclQueueInterface_1a24c6eb590e33102910ca89c30547f404" kindref="member">TestDPPLSyclQueueInterface</ref><sp/>()</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="d3/d4d/structTestDPPLSyclQueueInterface_1aff33a7b30db1584be5f4e46275720a32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d4d/structTestDPPLSyclQueueInterface_1aff33a7b30db1584be5f4e46275720a32" kindref="member">~TestDPPLSyclQueueInterface</ref><sp/>()</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="d4/d9f/test__sycl__queue__interface_8cpp_1acab29cb6a262cd79c092fe0db8d2c5d5" refkind="member"><highlight class="normal"><ref refid="d4/d9f/test__sycl__queue__interface_8cpp_1acab29cb6a262cd79c092fe0db8d2c5d5" kindref="member">TEST_F</ref><sp/>(<ref refid="d3/d4d/structTestDPPLSyclQueueInterface" kindref="compound">TestDPPLSyclQueueInterface</ref>,<sp/>CheckAreEq)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!has_devices())</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>Sycl<sp/>devices.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nOclGPU<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPLSyclBackendType::DPPL_OPENCL</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPLSyclDeviceType::DPPL_GPU</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!nOclGPU)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>OpenCL<sp/>GPUs<sp/>available.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q1<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a80b765ec2f49feaba3d781f491061d3b" kindref="member">DPPLQueueMgr_GetCurrentQueue</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q2<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a80b765ec2f49feaba3d781f491061d3b" kindref="member">DPPLQueueMgr_GetCurrentQueue</ref>();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a350f06f85df063f47232ae6463f0177a" kindref="member">DPPLQueue_AreEq</ref>(Q1,<sp/>Q2));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Def_Q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a32a8fbfb3afbac3695efd83078d94dff" kindref="member">DPPLQueueMgr_SetAsDefaultQueue</ref>(</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPLSyclBackendType::DPPL_OPENCL</ref>,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPLSyclDeviceType::DPPL_GPU</ref>,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>OclGPU_Q0<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPLSyclBackendType::DPPL_OPENCL</ref>,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPLSyclDeviceType::DPPL_GPU</ref>,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>OclGPU_Q1<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPLSyclBackendType::DPPL_OPENCL</ref>,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPLSyclDeviceType::DPPL_GPU</ref>,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a350f06f85df063f47232ae6463f0177a" kindref="member">DPPLQueue_AreEq</ref>(Def_Q,<sp/>OclGPU_Q0));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a350f06f85df063f47232ae6463f0177a" kindref="member">DPPLQueue_AreEq</ref>(Def_Q,<sp/>OclGPU_Q1));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a350f06f85df063f47232ae6463f0177a" kindref="member">DPPLQueue_AreEq</ref>(OclGPU_Q0,<sp/>OclGPU_Q1));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Def_Q);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(OclGPU_Q0);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(OclGPU_Q1);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="d4/d9f/test__sycl__queue__interface_8cpp_1a77f389934818f19c83b47eb977330601" refkind="member"><highlight class="normal"><ref refid="d4/d9f/test__sycl__queue__interface_8cpp_1acab29cb6a262cd79c092fe0db8d2c5d5" kindref="member">TEST_F</ref><sp/>(<ref refid="d3/d4d/structTestDPPLSyclQueueInterface" kindref="compound">TestDPPLSyclQueueInterface</ref>,<sp/>CheckAreEq2)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!has_devices())</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>Sycl<sp/>devices.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nOclGPU<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPLSyclBackendType::DPPL_OPENCL</ref>,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPLSyclDeviceType::DPPL_GPU</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nOclCPU<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPLSyclBackendType::DPPL_OPENCL</ref>,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302aa41f7995c46f3b674e94c0fc63515883" kindref="member">DPPLSyclDeviceType::DPPL_CPU</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!nOclGPU<sp/>||<sp/>!nOclCPU)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;OpenCL<sp/>GPUs<sp/>and<sp/>CPU<sp/>not<sp/>available.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>GPU_Q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPLSyclBackendType::DPPL_OPENCL</ref>,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPLSyclDeviceType::DPPL_GPU</ref>,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>CPU_Q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPLSyclBackendType::DPPL_OPENCL</ref>,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302aa41f7995c46f3b674e94c0fc63515883" kindref="member">DPPLSyclDeviceType::DPPL_CPU</ref>,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(<ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a350f06f85df063f47232ae6463f0177a" kindref="member">DPPLQueue_AreEq</ref>(GPU_Q,<sp/>CPU_Q));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="d4/d9f/test__sycl__queue__interface_8cpp_1ab0bac1a57c9d00ce0c7d45fdb2cde277" refkind="member"><highlight class="normal"><ref refid="d4/d9f/test__sycl__queue__interface_8cpp_1acab29cb6a262cd79c092fe0db8d2c5d5" kindref="member">TEST_F</ref><sp/>(<ref refid="d3/d4d/structTestDPPLSyclQueueInterface" kindref="compound">TestDPPLSyclQueueInterface</ref>,<sp/>CheckGetBackend)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!has_devices())</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>Sycl<sp/>devices.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q1<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a80b765ec2f49feaba3d781f491061d3b" kindref="member">DPPLQueueMgr_GetCurrentQueue</ref>();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>BE<sp/>=<sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a976a9a7d08fb147f65160b0d8cc091af" kindref="member">DPPLQueue_GetBackend</ref>(Q1);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE((BE<sp/>==<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>)<sp/>||</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(BE<sp/>==<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932a9cf919f672faa098e1472bef6bb9766a" kindref="member">DPPL_LEVEL_ZERO</ref>)<sp/>||</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(BE<sp/>==<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ade87f53b911041833db021defc12a412" kindref="member">DPPL_CUDA</ref>)<sp/>||</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(BE<sp/>==<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932a529e11b8ff21e816cc451887c6076991" kindref="member">DPPL_HOST</ref>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Q1);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>))<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a976a9a7d08fb147f65160b0d8cc091af" kindref="member">DPPLQueue_GetBackend</ref>(Q)<sp/>==<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Q);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302aa41f7995c46f3b674e94c0fc63515883" kindref="member">DPPL_CPU</ref>))<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302aa41f7995c46f3b674e94c0fc63515883" kindref="member">DPPL_CPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a976a9a7d08fb147f65160b0d8cc091af" kindref="member">DPPLQueue_GetBackend</ref>(Q)<sp/>==<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Q);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932a9cf919f672faa098e1472bef6bb9766a" kindref="member">DPPL_LEVEL_ZERO</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>))<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932a9cf919f672faa098e1472bef6bb9766a" kindref="member">DPPL_LEVEL_ZERO</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a976a9a7d08fb147f65160b0d8cc091af" kindref="member">DPPLQueue_GetBackend</ref>(Q)<sp/>==<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932a9cf919f672faa098e1472bef6bb9766a" kindref="member">DPPL_LEVEL_ZERO</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Q);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="d4/d9f/test__sycl__queue__interface_8cpp_1a73dcfe3cda4c4fc54a8638bcd59f1fc4" refkind="member"><highlight class="normal"><ref refid="d4/d9f/test__sycl__queue__interface_8cpp_1acab29cb6a262cd79c092fe0db8d2c5d5" kindref="member">TEST_F</ref><sp/>(<ref refid="d3/d4d/structTestDPPLSyclQueueInterface" kindref="compound">TestDPPLSyclQueueInterface</ref>,<sp/>CheckGetContext)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!has_devices())</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>Sycl<sp/>devices.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q1<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a80b765ec2f49feaba3d781f491061d3b" kindref="member">DPPLQueueMgr_GetCurrentQueue</ref>();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Ctx<sp/>=<sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a5364a29559d40d5edc1cd758bf620993" kindref="member">DPPLQueue_GetContext</ref>(Q1);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(Ctx<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Q1);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d8e/dppl__sycl__context__interface_8h_1a0fd0388d7bce93267070c48883371d72" kindref="member">DPPLContext_Delete</ref>(Ctx);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>))<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>OclGpuCtx<sp/>=<sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a5364a29559d40d5edc1cd758bf620993" kindref="member">DPPLQueue_GetContext</ref>(Q);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(OclGpuCtx<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Q);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d8e/dppl__sycl__context__interface_8h_1a0fd0388d7bce93267070c48883371d72" kindref="member">DPPLContext_Delete</ref>(OclGpuCtx);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302aa41f7995c46f3b674e94c0fc63515883" kindref="member">DPPL_CPU</ref>))<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302aa41f7995c46f3b674e94c0fc63515883" kindref="member">DPPL_CPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>OclCpuCtx<sp/>=<sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a5364a29559d40d5edc1cd758bf620993" kindref="member">DPPLQueue_GetContext</ref>(Q);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(OclCpuCtx<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Q);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d8e/dppl__sycl__context__interface_8h_1a0fd0388d7bce93267070c48883371d72" kindref="member">DPPLContext_Delete</ref>(OclCpuCtx);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932a9cf919f672faa098e1472bef6bb9766a" kindref="member">DPPL_LEVEL_ZERO</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>))<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932a9cf919f672faa098e1472bef6bb9766a" kindref="member">DPPL_LEVEL_ZERO</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>L0Ctx<sp/>=<sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a5364a29559d40d5edc1cd758bf620993" kindref="member">DPPLQueue_GetContext</ref>(Q);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(Ctx<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Q);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d8e/dppl__sycl__context__interface_8h_1a0fd0388d7bce93267070c48883371d72" kindref="member">DPPLContext_Delete</ref>(L0Ctx);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="d4/d9f/test__sycl__queue__interface_8cpp_1aa703748673ed37e52efc5cf783460e6a" refkind="member"><highlight class="normal"><ref refid="d4/d9f/test__sycl__queue__interface_8cpp_1acab29cb6a262cd79c092fe0db8d2c5d5" kindref="member">TEST_F</ref><sp/>(<ref refid="d3/d4d/structTestDPPLSyclQueueInterface" kindref="compound">TestDPPLSyclQueueInterface</ref>,<sp/>CheckGetDevice)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!has_devices())</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>Sycl<sp/>devices.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q1<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a80b765ec2f49feaba3d781f491061d3b" kindref="member">DPPLQueueMgr_GetCurrentQueue</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>D<sp/>=<sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1ae0f08839c2c9f3876e55564e517afda5" kindref="member">DPPLQueue_GetDevice</ref>(Q1);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(D<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Q1);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d8f/dppl__sycl__device__interface_8h_1a58b34562aa960c9d971017e06848f10a" kindref="member">DPPLDevice_Delete</ref>(D);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>))<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>OCLGPU_D<sp/>=<sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1ae0f08839c2c9f3876e55564e517afda5" kindref="member">DPPLQueue_GetDevice</ref>(Q);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(OCLGPU_D<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="d8/d8f/dppl__sycl__device__interface_8h_1a6935ff5c11620630795625bfcded162c" kindref="member">DPPLDevice_IsGPU</ref>(OCLGPU_D));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Q);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d8f/dppl__sycl__device__interface_8h_1a58b34562aa960c9d971017e06848f10a" kindref="member">DPPLDevice_Delete</ref>(OCLGPU_D);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302aa41f7995c46f3b674e94c0fc63515883" kindref="member">DPPL_CPU</ref>))<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302aa41f7995c46f3b674e94c0fc63515883" kindref="member">DPPL_CPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>OCLCPU_D<sp/>=<sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1ae0f08839c2c9f3876e55564e517afda5" kindref="member">DPPLQueue_GetDevice</ref>(Q);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(OCLCPU_D<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="d8/d8f/dppl__sycl__device__interface_8h_1aab17e347ca918c24a4570792973195d3" kindref="member">DPPLDevice_IsCPU</ref>(OCLCPU_D));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Q);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d8f/dppl__sycl__device__interface_8h_1a58b34562aa960c9d971017e06848f10a" kindref="member">DPPLDevice_Delete</ref>(OCLCPU_D);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932a9cf919f672faa098e1472bef6bb9766a" kindref="member">DPPL_LEVEL_ZERO</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>))<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8a5d366ca716cec0aae921da7a70facf" kindref="member">DPPLQueueMgr_PushQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932a9cf919f672faa098e1472bef6bb9766a" kindref="member">DPPL_LEVEL_ZERO</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>L0GPU_D<sp/>=<sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1ae0f08839c2c9f3876e55564e517afda5" kindref="member">DPPLQueue_GetDevice</ref>(Q);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(L0GPU_D<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE(<ref refid="d8/d8f/dppl__sycl__device__interface_8h_1a6935ff5c11620630795625bfcded162c" kindref="member">DPPLDevice_IsGPU</ref>(L0GPU_D));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Q);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d8f/dppl__sycl__device__interface_8h_1a58b34562aa960c9d971017e06848f10a" kindref="member">DPPLDevice_Delete</ref>(L0GPU_D);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a8825a8fe46756cefe5fcb36d770ec462" kindref="member">DPPLQueueMgr_PopQueue</ref>();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="d4/d9f/test__sycl__queue__interface_8cpp_1a944349c9eb0ff91e6903c8243d30ba56" refkind="member"><highlight class="normal"><ref refid="d4/d9f/test__sycl__queue__interface_8cpp_1acab29cb6a262cd79c092fe0db8d2c5d5" kindref="member">TEST_F</ref><sp/>(<ref refid="d3/d4d/structTestDPPLSyclQueueInterface" kindref="compound">TestDPPLSyclQueueInterface</ref>,<sp/>CheckSubmit)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!has_devices())</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>Sycl<sp/>devices.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nOpenCLGpuQ<sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1abdccdcdaa08980d3a21850d5b3424276" kindref="member">DPPLQueueMgr_GetNumQueues</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!nOpenCLGpuQ)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GTEST_SKIP_(</highlight><highlight class="stringliteral">&quot;Skipping:<sp/>No<sp/>OpenCL<sp/>GPU<sp/>device.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Queue<sp/><sp/>=<sp/><ref refid="d0/de9/dppl__sycl__queue__manager_8h_1a25030bcff6aa416374d49377f4501d1f" kindref="member">DPPLQueueMgr_GetQueue</ref>(<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a006122c6b6223df098e3cb0ca34d1932ab853d01482e628f7e60c58dcbdec0fed" kindref="member">DPPL_OPENCL</ref>,<sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a3aeffb0db7e2c7a0655c7bf13afce302ab95e7557f3a390783f7b1b8809e04253" kindref="member">DPPL_GPU</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>CtxRef<sp/>=<sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a5364a29559d40d5edc1cd758bf620993" kindref="member">DPPLQueue_GetContext</ref>(Queue);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>PRef<sp/><sp/><sp/>=<sp/><ref refid="d1/d3d/dppl__sycl__program__interface_8h_1af9f51f93daa64bedcd3790a416a4869a" kindref="member">DPPLProgram_CreateFromOCLSource</ref>(CtxRef,<sp/>CLProgramStr,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CompileOpts);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(PRef<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(<ref refid="d1/d3d/dppl__sycl__program__interface_8h_1ad204c641de13b034ef2bff5cb6e18b29" kindref="member">DPPLProgram_HasKernel</ref>(PRef,<sp/></highlight><highlight class="stringliteral">&quot;init_arr&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(<ref refid="d1/d3d/dppl__sycl__program__interface_8h_1ad204c641de13b034ef2bff5cb6e18b29" kindref="member">DPPLProgram_HasKernel</ref>(PRef,<sp/></highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(<ref refid="d1/d3d/dppl__sycl__program__interface_8h_1ad204c641de13b034ef2bff5cb6e18b29" kindref="member">DPPLProgram_HasKernel</ref>(PRef,<sp/></highlight><highlight class="stringliteral">&quot;axpy&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>InitKernel<sp/>=<sp/><ref refid="d1/d3d/dppl__sycl__program__interface_8h_1afdda6116401b8769a3b28edae7a85258" kindref="member">DPPLProgram_GetKernel</ref>(PRef,<sp/></highlight><highlight class="stringliteral">&quot;init_arr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>AddKernel<sp/><sp/>=<sp/><ref refid="d1/d3d/dppl__sycl__program__interface_8h_1afdda6116401b8769a3b28edae7a85258" kindref="member">DPPLProgram_GetKernel</ref>(PRef,<sp/></highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>AxpyKernel<sp/>=<sp/><ref refid="d1/d3d/dppl__sycl__program__interface_8h_1afdda6116401b8769a3b28edae7a85258" kindref="member">DPPLProgram_GetKernel</ref>(PRef,<sp/></highlight><highlight class="stringliteral">&quot;axpy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>input<sp/>args</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a<sp/>=<sp/><ref refid="dc/d46/dppl__sycl__usm__interface_8h_1a55ce364a879d57f75a133f5ca071c4a5" kindref="member">DPPLmalloc_shared</ref>(SIZE,<sp/>Queue);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(a<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>b<sp/>=<sp/><ref refid="dc/d46/dppl__sycl__usm__interface_8h_1a55ce364a879d57f75a133f5ca071c4a5" kindref="member">DPPLmalloc_shared</ref>(SIZE,<sp/>Queue);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(b<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/><ref refid="dc/d46/dppl__sycl__usm__interface_8h_1a55ce364a879d57f75a133f5ca071c4a5" kindref="member">DPPLmalloc_shared</ref>(SIZE,<sp/>Queue);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(c<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>a,b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a1dee0e39cee059b74fb70e666ff7a584" kindref="member">DPPLKernelArgType</ref><sp/>argTypes[]<sp/>=<sp/>{<ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a1dee0e39cee059b74fb70e666ff7a584a406569ef3271265765ffbd96872aa598" kindref="member">DPPL_VOID_PTR</ref>};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Range[]<sp/>=<sp/>{SIZE};</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg1[1]<sp/>=<sp/>{<sp/>unwrap(a)<sp/>};</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg2[1]<sp/>=<sp/>{<sp/>unwrap(b)<sp/>};</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>E1<sp/>=<sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1acaf20de090bd06d9f6706a17cef07e54" kindref="member">DPPLQueue_SubmitRange</ref>(InitKernel,<sp/>Queue,<sp/>arg1,<sp/>argTypes,<sp/>1,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Range,<sp/>1,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>E2<sp/>=<sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1acaf20de090bd06d9f6706a17cef07e54" kindref="member">DPPLQueue_SubmitRange</ref>(InitKernel,<sp/>Queue,<sp/>arg2,<sp/>argTypes,<sp/>1,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Range,<sp/>1,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(E1<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(E2<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a42254e3ddd8633e829815d0561a97116" kindref="member">DPPLQueue_Wait</ref>(Queue);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Submit<sp/>the<sp/>add<sp/>kernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*args[3]<sp/>=<sp/>{<sp/>unwrap(a),<sp/>unwrap(b),<sp/>unwrap(c)<sp/>};</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a1dee0e39cee059b74fb70e666ff7a584" kindref="member">DPPLKernelArgType</ref><sp/>addKernelArgTypes[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a1dee0e39cee059b74fb70e666ff7a584a406569ef3271265765ffbd96872aa598" kindref="member">DPPL_VOID_PTR</ref>,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a1dee0e39cee059b74fb70e666ff7a584a406569ef3271265765ffbd96872aa598" kindref="member">DPPL_VOID_PTR</ref>,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a1dee0e39cee059b74fb70e666ff7a584a406569ef3271265765ffbd96872aa598" kindref="member">DPPL_VOID_PTR</ref></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>E3<sp/>=<sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1acaf20de090bd06d9f6706a17cef07e54" kindref="member">DPPLQueue_SubmitRange</ref>(AddKernel,<sp/>Queue,<sp/>args,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addKernelArgTypes,<sp/>3,<sp/>Range,<sp/>1,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(E3<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a42254e3ddd8633e829815d0561a97116" kindref="member">DPPLQueue_Wait</ref>(Queue);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>result<sp/>of<sp/>&quot;add&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>add_kernel_checker((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)a,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)b,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)c);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>kernel<sp/>args<sp/>for<sp/>axpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>10.0;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*args2[4]<sp/>=<sp/>{<sp/>unwrap(a),<sp/>unwrap(b),<sp/>unwrap(c)<sp/>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;d<sp/>};</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a1dee0e39cee059b74fb70e666ff7a584" kindref="member">DPPLKernelArgType</ref><sp/>addKernelArgTypes2[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a1dee0e39cee059b74fb70e666ff7a584a406569ef3271265765ffbd96872aa598" kindref="member">DPPL_VOID_PTR</ref>,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a1dee0e39cee059b74fb70e666ff7a584a406569ef3271265765ffbd96872aa598" kindref="member">DPPL_VOID_PTR</ref>,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a1dee0e39cee059b74fb70e666ff7a584a406569ef3271265765ffbd96872aa598" kindref="member">DPPL_VOID_PTR</ref>,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4f/dppl__sycl__enum__types_8h_1a1dee0e39cee059b74fb70e666ff7a584ae7b3c682da8e3c7d1ae3960b8fcd02f6" kindref="member">DPPL_FLOAT</ref></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>E4<sp/>=<sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1acaf20de090bd06d9f6706a17cef07e54" kindref="member">DPPLQueue_SubmitRange</ref>(AxpyKernel,<sp/>Queue,<sp/>args2,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addKernelArgTypes2,<sp/>4,<sp/>Range,<sp/>1,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(E4<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a42254e3ddd8633e829815d0561a97116" kindref="member">DPPLQueue_Wait</ref>(Queue);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>result<sp/>of<sp/>&quot;axpy&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>axpy_kernel_checker((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)a,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)b,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)c,<sp/>d);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clean<sp/>ups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d2c/dppl__sycl__event__interface_8h_1a9aeb473ed16316f62ce4fd0cab4ddbfc" kindref="member">DPPLEvent_Delete</ref>(E1);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d2c/dppl__sycl__event__interface_8h_1a9aeb473ed16316f62ce4fd0cab4ddbfc" kindref="member">DPPLEvent_Delete</ref>(E2);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d2c/dppl__sycl__event__interface_8h_1a9aeb473ed16316f62ce4fd0cab4ddbfc" kindref="member">DPPLEvent_Delete</ref>(E3);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d2c/dppl__sycl__event__interface_8h_1a9aeb473ed16316f62ce4fd0cab4ddbfc" kindref="member">DPPLEvent_Delete</ref>(E4);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d31/dppl__sycl__kernel__interface_8h_1a47bcfc3a382e18570bbc437e0e53961f" kindref="member">DPPLKernel_Delete</ref>(AddKernel);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d31/dppl__sycl__kernel__interface_8h_1a47bcfc3a382e18570bbc437e0e53961f" kindref="member">DPPLKernel_Delete</ref>(AxpyKernel);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d31/dppl__sycl__kernel__interface_8h_1a47bcfc3a382e18570bbc437e0e53961f" kindref="member">DPPLKernel_Delete</ref>(InitKernel);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d46/dppl__sycl__usm__interface_8h_1a0056911125b8e1e12c35f9e7199ad65d" kindref="member">DPPLfree_with_queue</ref>((<ref refid="d4/d8f/dppl__sycl__types_8h_1a2cb2ce60eb645f7b35c3ea60fe153a2e" kindref="member">DPPLSyclUSMRef</ref>)a,<sp/>Queue);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d46/dppl__sycl__usm__interface_8h_1a0056911125b8e1e12c35f9e7199ad65d" kindref="member">DPPLfree_with_queue</ref>((<ref refid="d4/d8f/dppl__sycl__types_8h_1a2cb2ce60eb645f7b35c3ea60fe153a2e" kindref="member">DPPLSyclUSMRef</ref>)b,<sp/>Queue);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d46/dppl__sycl__usm__interface_8h_1a0056911125b8e1e12c35f9e7199ad65d" kindref="member">DPPLfree_with_queue</ref>((<ref refid="d4/d8f/dppl__sycl__types_8h_1a2cb2ce60eb645f7b35c3ea60fe153a2e" kindref="member">DPPLSyclUSMRef</ref>)c,<sp/>Queue);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d7b/dppl__sycl__queue__interface_8h_1a7c0ea006c1c53a359714a3f4fb50446c" kindref="member">DPPLQueue_Delete</ref>(Queue);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d8e/dppl__sycl__context__interface_8h_1a0fd0388d7bce93267070c48883371d72" kindref="member">DPPLContext_Delete</ref>(CtxRef);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d3d/dppl__sycl__program__interface_8h_1a5852fc8ab7525ea20fcbbced4bda4b58" kindref="member">DPPLProgram_Delete</ref>(PRef);</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="d4/d9f/test__sycl__queue__interface_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"><ref refid="d4/d9f/test__sycl__queue__interface_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>::testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/diptorupd/Desktop/devel/dpctl/backends/tests/test_sycl_queue_interface.cpp"/>
  </compounddef>
</doxygen>
