<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d0/da0/dppl__opencl__interface_8h" kind="file" language="C++">
    <compoundname>dppl_opencl_interface.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdlib.h</includes>
    <includedby refid="db/de2/dppl__opencl__interface_8c" local="yes">dppl_opencl_interface.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>dppl_opencl_interface.h</label>
        <link refid="d0/da0/dppl__opencl__interface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>dppl_opencl_interface.c</label>
        <link refid="db/de2/dppl__opencl__interface_8c"/>
      </node>
      <node id="1">
        <label>dppl_opencl_interface.h</label>
        <link refid="d0/da0/dppl__opencl__interface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d3/d90/structdp__buffer" prot="public">dp_buffer</innerclass>
    <innerclass refid="dd/d9f/structdp__env" prot="public">dp_env</innerclass>
    <innerclass refid="d1/d41/structdp__kernel" prot="public">dp_kernel</innerclass>
    <innerclass refid="d1/df7/structdp__kernel__arg" prot="public">dp_kernel_arg</innerclass>
    <innerclass refid="da/d21/structdp__program" prot="public">dp_program</innerclass>
    <innerclass refid="d5/d48/structdp__runtime" prot="public">dp_runtime</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" prot="public" static="no">
        <name>DPPL_API</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="40" column="14" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="d0/da0/dppl__opencl__interface_8h_1a414d5545eb64717cf76cdfd716b67b29" prot="public" static="no" strong="no">
        <type></type>
        <name>DP_GLUE_ERROR_CODES</name>
        <enumvalue id="d0/da0/dppl__opencl__interface_8h_1a414d5545eb64717cf76cdfd716b67b29a60bed6172a9161c7ca7570174522ff55" prot="public">
          <name>DP_GLUE_SUCCESS</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d0/da0/dppl__opencl__interface_8h_1a414d5545eb64717cf76cdfd716b67b29a9a5f99b6893b1471890b87154ba89315" prot="public">
          <name>DP_GLUE_FAILURE</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="45" column="1" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" bodystart="44" bodyend="48"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d0/da0/dppl__opencl__interface_8h_1a162ccb3cf5ba5fd158c0526cb59412c5" prot="public" static="no">
        <type>struct <ref refid="d3/d90/structdp__buffer" kindref="compound">dp_buffer</ref> *</type>
        <definition>typedef struct dp_buffer* buffer_t</definition>
        <argsstring></argsstring>
        <name>buffer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="80" column="25" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/da0/dppl__opencl__interface_8h_1a60a68d6cb63216c6954c6d6f4db3b6a4" prot="public" static="no">
        <type>struct <ref refid="dd/d9f/structdp__env" kindref="compound">dp_env</ref> *</type>
        <definition>typedef struct dp_env* env_t</definition>
        <argsstring></argsstring>
        <name>env_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="68" column="22" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/da0/dppl__opencl__interface_8h_1ad6b9cfe3b0fec6fcd179adf2ed2fa12f" prot="public" static="no">
        <type>struct <ref refid="d1/df7/structdp__kernel__arg" kindref="compound">dp_kernel_arg</ref> *</type>
        <definition>typedef struct dp_kernel_arg* kernel_arg_t</definition>
        <argsstring></argsstring>
        <name>kernel_arg_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="109" column="29" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/da0/dppl__opencl__interface_8h_1a4032a461689a915b743ca9d075ad8570" prot="public" static="no">
        <type>struct <ref refid="d1/d41/structdp__kernel" kindref="compound">dp_kernel</ref> *</type>
        <definition>typedef struct dp_kernel* kernel_t</definition>
        <argsstring></argsstring>
        <name>kernel_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="90" column="25" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/da0/dppl__opencl__interface_8h_1afad71e6b9f69f779865c7b36fdab8695" prot="public" static="no">
        <type>struct <ref refid="da/d21/structdp__program" kindref="compound">dp_program</ref> *</type>
        <definition>typedef struct dp_program* program_t</definition>
        <argsstring></argsstring>
        <name>program_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="99" column="26" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/da0/dppl__opencl__interface_8h_1a02fe9218ba15ed9a5addc7b692d4b8f5" prot="public" static="no">
        <type>struct <ref refid="d5/d48/structdp__runtime" kindref="compound">dp_runtime</ref> *</type>
        <definition>typedef struct dp_runtime* runtime_t</definition>
        <argsstring></argsstring>
        <name>runtime_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="135" column="26" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1a4d7b38c8c2cf3f7a9404c35637a0486e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int build_dp_program</definition>
        <argsstring>(env_t env_t_ptr, program_t program_t_ptr)</argsstring>
        <name>build_dp_program</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a60a68d6cb63216c6954c6d6f4db3b6a4" kindref="member">env_t</ref></type>
          <declname>env_t_ptr</declname>
        </param>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1afad71e6b9f69f779865c7b36fdab8695" kindref="member">program_t</ref></type>
          <declname>program_t_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="227" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="910" bodyend="935" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="227" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1a4b73910a72c44db86093eac5857a5550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int create_dp_kernel</definition>
        <argsstring>(env_t env_t_ptr, program_t program_ptr, const char *kernel_name, kernel_t *kernel_ptr)</argsstring>
        <name>create_dp_kernel</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a60a68d6cb63216c6954c6d6f4db3b6a4" kindref="member">env_t</ref></type>
          <declname>env_t_ptr</declname>
        </param>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1afad71e6b9f69f779865c7b36fdab8695" kindref="member">program_t</ref></type>
          <declname>program_ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>kernel_name</declname>
        </param>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a4032a461689a915b743ca9d075ad8570" kindref="member">kernel_t</ref> *</type>
          <declname>kernel_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="233" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="941" bodyend="978" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="233" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1aa49f0c518b4f6245daf5f633a96c4a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int create_dp_kernel_arg</definition>
        <argsstring>(const void *arg_value, size_t arg_size, kernel_arg_t *kernel_arg_t_ptr)</argsstring>
        <name>create_dp_kernel_arg</name>
        <param>
          <type>const void *</type>
          <declname>arg_value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>arg_size</declname>
        </param>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1ad6b9cfe3b0fec6fcd179adf2ed2fa12f" kindref="member">kernel_arg_t</ref> *</type>
          <declname>kernel_arg_t_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="247" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="1005" bodyend="1032" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="247" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1a2ca3be92f3c4a5893480179a22b1fe79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int create_dp_kernel_arg_from_buffer</definition>
        <argsstring>(buffer_t *buffer_t_ptr, kernel_arg_t *kernel_arg_t_ptr)</argsstring>
        <name>create_dp_kernel_arg_from_buffer</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a162ccb3cf5ba5fd158c0526cb59412c5" kindref="member">buffer_t</ref> *</type>
          <declname>buffer_t_ptr</declname>
        </param>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1ad6b9cfe3b0fec6fcd179adf2ed2fa12f" kindref="member">kernel_arg_t</ref> *</type>
          <declname>kernel_arg_t_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="256" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="1037" bodyend="1046" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="256" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1ac8c4bca1168ac2e09499474d09f0d0e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int create_dp_program_from_source</definition>
        <argsstring>(env_t env_t_ptr, unsigned int count, const char **strings, const size_t *lengths, program_t *program_t_ptr)</argsstring>
        <name>create_dp_program_from_source</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a60a68d6cb63216c6954c6d6f4db3b6a4" kindref="member">env_t</ref></type>
          <declname>env_t_ptr</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>strings</declname>
        </param>
        <param>
          <type>const size_t *</type>
          <declname>lengths</declname>
        </param>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1afad71e6b9f69f779865c7b36fdab8695" kindref="member">program_t</ref> *</type>
          <declname>program_t_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="213" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="844" bodyend="886" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="213" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1a61cd59306e71ead11a06dc762f13c8f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int create_dp_program_from_spirv</definition>
        <argsstring>(env_t env_t_ptr, const void *il, size_t length, program_t *program_t_ptr)</argsstring>
        <name>create_dp_program_from_spirv</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a60a68d6cb63216c6954c6d6f4db3b6a4" kindref="member">env_t</ref></type>
          <declname>env_t_ptr</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>il</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1afad71e6b9f69f779865c7b36fdab8695" kindref="member">program_t</ref> *</type>
          <declname>program_t_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="203" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="791" bodyend="841" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="203" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1ac831129e3002135ebd37eaf8916fc82e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int create_dp_runtime</definition>
        <argsstring>(runtime_t *rt)</argsstring>
        <name>create_dp_runtime</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a02fe9218ba15ed9a5addc7b692d4b8f5" kindref="member">runtime_t</ref> *</type>
          <declname>rt</declname>
        </param>
        <briefdescription>
<para>Initializes a new <ref refid="d5/d9e/structdp__runtime__t" kindref="compound">dp_runtime_t</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>rt - An uninitialized runtime_t pointer that is initialized by the function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An error code indicating if the runtime_t object was successfully initialized.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="150" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="517" bodyend="545" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="150" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1ad168b5498c8b9b91471bf8d41dec9687" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int create_dp_rw_mem_buffer</definition>
        <argsstring>(env_t env_t_ptr, size_t buffsize, buffer_t *buff)</argsstring>
        <name>create_dp_rw_mem_buffer</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a60a68d6cb63216c6954c6d6f4db3b6a4" kindref="member">env_t</ref></type>
          <declname>env_t_ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffsize</declname>
        </param>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a162ccb3cf5ba5fd158c0526cb59412c5" kindref="member">buffer_t</ref> *</type>
          <declname>buff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="168" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="629" bodyend="674" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="168" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1a0a75e78559fb5d2f7077b7e85a7b49bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int destroy_dp_kernel</definition>
        <argsstring>(kernel_t *kernel_ptr)</argsstring>
        <name>destroy_dp_kernel</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a4032a461689a915b743ca9d075ad8570" kindref="member">kernel_t</ref> *</type>
          <declname>kernel_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="240" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="981" bodyend="999" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="240" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1ad4e5e4079114d83c6b18c9563ab8ea54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int destroy_dp_kernel_arg</definition>
        <argsstring>(kernel_arg_t *kernel_arg_t_ptr)</argsstring>
        <name>destroy_dp_kernel_arg</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1ad6b9cfe3b0fec6fcd179adf2ed2fa12f" kindref="member">kernel_arg_t</ref> *</type>
          <declname>kernel_arg_t_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="264" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="1051" bodyend="1060" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="264" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1a254610fada2ce8e947107f344beddd64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int destroy_dp_program</definition>
        <argsstring>(program_t *program_t_ptr)</argsstring>
        <name>destroy_dp_program</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1afad71e6b9f69f779865c7b36fdab8695" kindref="member">program_t</ref> *</type>
          <declname>program_t_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="223" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="889" bodyend="907" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="223" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1a8867089d47ae5d377403b569ce9eac65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int destroy_dp_runtime</definition>
        <argsstring>(runtime_t *rt)</argsstring>
        <name>destroy_dp_runtime</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a02fe9218ba15ed9a5addc7b692d4b8f5" kindref="member">runtime_t</ref> *</type>
          <declname>rt</declname>
        </param>
        <briefdescription>
<para>Free the runtime and all its resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rt</parametername>
</parameternamelist>
<parameterdescription>
<para>- Pointer to the numba_one_api_runtime_t object to be freed</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An error code indicating if resource freeing was successful.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="161" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="552" bodyend="586" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="161" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1a8fd94758bcf51f2360cb20ece8ef58a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int destroy_dp_rw_mem_buffer</definition>
        <argsstring>(buffer_t *buff)</argsstring>
        <name>destroy_dp_rw_mem_buffer</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a162ccb3cf5ba5fd158c0526cb59412c5" kindref="member">buffer_t</ref> *</type>
          <declname>buff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="172" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="677" bodyend="695" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="172" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1acada14bf8d4460d9e465b1cca90e6715" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int read_dp_mem_buffer_from_device</definition>
        <argsstring>(env_t env_t_ptr, buffer_t buff, bool blocking_copy, size_t offset, size_t buffersize, void *data_ptr)</argsstring>
        <name>read_dp_mem_buffer_from_device</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a60a68d6cb63216c6954c6d6f4db3b6a4" kindref="member">env_t</ref></type>
          <declname>env_t_ptr</declname>
        </param>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a162ccb3cf5ba5fd158c0526cb59412c5" kindref="member">buffer_t</ref></type>
          <declname>buff</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>blocking_copy</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffersize</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="191" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="746" bodyend="788" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="191" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1a7ae58d6b8a43ca75c9b7600e660fe30c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int release_dp_context</definition>
        <argsstring>(env_t env_t_ptr)</argsstring>
        <name>release_dp_context</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a60a68d6cb63216c6954c6d6f4db3b6a4" kindref="member">env_t</ref></type>
          <declname>env_t_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="305" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="612" bodyend="626" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="305" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1aff3bac7c4d9ae09bae17078e5d25d97f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int retain_dp_context</definition>
        <argsstring>(env_t env_t_ptr)</argsstring>
        <name>retain_dp_context</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a60a68d6cb63216c6954c6d6f4db3b6a4" kindref="member">env_t</ref></type>
          <declname>env_t_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="298" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="592" bodyend="606" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="298" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1a80c549645f93a14408c09f8d40749bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int set_args_and_enqueue_dp_kernel</definition>
        <argsstring>(env_t env_t_ptr, kernel_t kernel_t_ptr, size_t nargs, const kernel_arg_t *args, unsigned int work_dim, const size_t *global_work_offset, const size_t *global_work_size, const size_t *local_work_size)</argsstring>
        <name>set_args_and_enqueue_dp_kernel</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a60a68d6cb63216c6954c6d6f4db3b6a4" kindref="member">env_t</ref></type>
          <declname>env_t_ptr</declname>
        </param>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a4032a461689a915b743ca9d075ad8570" kindref="member">kernel_t</ref></type>
          <declname>kernel_t_ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nargs</declname>
        </param>
        <param>
          <type>const <ref refid="d0/da0/dppl__opencl__interface_8h_1ad6b9cfe3b0fec6fcd179adf2ed2fa12f" kindref="member">kernel_arg_t</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>work_dim</declname>
        </param>
        <param>
          <type>const size_t *</type>
          <declname>global_work_offset</declname>
        </param>
        <param>
          <type>const size_t *</type>
          <declname>global_work_size</declname>
        </param>
        <param>
          <type>const size_t *</type>
          <declname>local_work_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="271" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="1066" bodyend="1121" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="271" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1a29493fd687e0217843648b202f167ce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int set_args_and_enqueue_dp_kernel_auto_blocking</definition>
        <argsstring>(env_t env_t_ptr, kernel_t kernel_t_ptr, size_t nargs, const kernel_arg_t *args, unsigned int num_dims, size_t *dim_starts, size_t *dim_stops)</argsstring>
        <name>set_args_and_enqueue_dp_kernel_auto_blocking</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a60a68d6cb63216c6954c6d6f4db3b6a4" kindref="member">env_t</ref></type>
          <declname>env_t_ptr</declname>
        </param>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a4032a461689a915b743ca9d075ad8570" kindref="member">kernel_t</ref></type>
          <declname>kernel_t_ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nargs</declname>
        </param>
        <param>
          <type>const <ref refid="d0/da0/dppl__opencl__interface_8h_1ad6b9cfe3b0fec6fcd179adf2ed2fa12f" kindref="member">kernel_arg_t</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>num_dims</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>dim_starts</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>dim_stops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="285" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="1127" bodyend="1166" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="285" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1ad2b9b68c935d84e1a63ced32446364d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int set_curr_env</definition>
        <argsstring>(runtime_t rt, env_t env)</argsstring>
        <name>set_curr_env</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a02fe9218ba15ed9a5addc7b692d4b8f5" kindref="member">runtime_t</ref></type>
          <declname>rt</declname>
        </param>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a60a68d6cb63216c6954c6d6f4db3b6a4" kindref="member">env_t</ref></type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="138" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="504" bodyend="511" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="138" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/da0/dppl__opencl__interface_8h_1a338f2c0033be7bd13ba49e23bf80f8c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref> int</type>
        <definition>DPPL_API int write_dp_mem_buffer_to_device</definition>
        <argsstring>(env_t env_t_ptr, buffer_t buff, bool blocking_copy, size_t offset, size_t buffersize, const void *data_ptr)</argsstring>
        <name>write_dp_mem_buffer_to_device</name>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a60a68d6cb63216c6954c6d6f4db3b6a4" kindref="member">env_t</ref></type>
          <declname>env_t_ptr</declname>
        </param>
        <param>
          <type><ref refid="d0/da0/dppl__opencl__interface_8h_1a162ccb3cf5ba5fd158c0526cb59412c5" kindref="member">buffer_t</ref></type>
          <declname>buff</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>blocking_copy</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffersize</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" line="179" column="5" bodyfile="/home/diptorupd/Desktop/devel/dpctl/backends/source/dppl_opencl_interface.c" bodystart="698" bodyend="743" declfile="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h" declline="179" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This file contains the declaration of a C API to expose a lightweight OpenCL interface for the Python dpctl package. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//===------------<sp/>dppl_opencl_interface.h<sp/>-<sp/>dpctl-C_API<sp/>-------*-<sp/>C<sp/>-*-----===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data<sp/>Parallel<sp/>Control<sp/>Library<sp/>(dpCtl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2020<sp/>Intel<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>ifdef<sp/>DPPLOpenCLInterface_EXPORTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>DPPL_API<sp/>__declspec(dllexport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>DPPL_API<sp/>__declspec(dllimport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>DPPL_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="d0/da0/dppl__opencl__interface_8h_1a414d5545eb64717cf76cdfd716b67b29" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a414d5545eb64717cf76cdfd716b67b29" kindref="member">DP_GLUE_ERROR_CODES</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46" refid="d0/da0/dppl__opencl__interface_8h_1a414d5545eb64717cf76cdfd716b67b29a60bed6172a9161c7ca7570174522ff55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a414d5545eb64717cf76cdfd716b67b29a60bed6172a9161c7ca7570174522ff55" kindref="member">DP_GLUE_SUCCESS</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="47" refid="d0/da0/dppl__opencl__interface_8h_1a414d5545eb64717cf76cdfd716b67b29a9a5f99b6893b1471890b87154ba89315" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a414d5545eb64717cf76cdfd716b67b29a9a5f99b6893b1471890b87154ba89315" kindref="member">DP_GLUE_FAILURE</ref><sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="dd/d9f/structdp__env" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/d9f/structdp__env" kindref="compound">dp_env</ref></highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56" refid="dd/d9f/structdp__env_1a5b118346b049b427d0ad4ebd91d620d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="dd/d9f/structdp__env_1a5b118346b049b427d0ad4ebd91d620d6" kindref="member">id_</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>:<sp/>Add<sp/>members<sp/>to<sp/>store<sp/>more<sp/>device<sp/>related<sp/>information<sp/>such<sp/>as<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="dd/d9f/structdp__env_1a71fcd31fd9bea81c7e617eea47a3ba3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="dd/d9f/structdp__env_1a71fcd31fd9bea81c7e617eea47a3ba3c" kindref="member">context</ref>;</highlight></codeline>
<codeline lineno="59" refid="dd/d9f/structdp__env_1acaebd487623f5184afaa8cc9e1484298" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="dd/d9f/structdp__env_1acaebd487623f5184afaa8cc9e1484298" kindref="member">device</ref>;</highlight></codeline>
<codeline lineno="60" refid="dd/d9f/structdp__env_1ad5a7563e4b9b8d43286b970e440e0725" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="dd/d9f/structdp__env_1ad5a7563e4b9b8d43286b970e440e0725" kindref="member">queue</ref>;</highlight></codeline>
<codeline lineno="61" refid="dd/d9f/structdp__env_1ac1c747b9c812e986f57bbd2b161762ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/d9f/structdp__env_1ac1c747b9c812e986f57bbd2b161762ce" kindref="member">max_work_item_dims</ref>;</highlight></codeline>
<codeline lineno="62" refid="dd/d9f/structdp__env_1af84974f230719cf38988b6d6681058df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="dd/d9f/structdp__env_1af84974f230719cf38988b6d6681058df" kindref="member">max_work_group_size</ref>;</highlight></codeline>
<codeline lineno="63" refid="dd/d9f/structdp__env_1a35e7de8a20748ae145861aa568b31f5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/d9f/structdp__env_1a35e7de8a20748ae145861aa568b31f5e" kindref="member">support_int64_atomics</ref>;</highlight></codeline>
<codeline lineno="64" refid="dd/d9f/structdp__env_1ad13ac6ec1f1d52e3787b5e2e4a607096" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/d9f/structdp__env_1ad13ac6ec1f1d52e3787b5e2e4a607096" kindref="member">support_float64_atomics</ref>;</highlight></codeline>
<codeline lineno="65" refid="dd/d9f/structdp__env_1ad16df897c31528dfccd1e06df349634d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="dd/d9f/structdp__env_1ad16df897c31528dfccd1e06df349634d" kindref="member">dump_fn</ref>)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="d0/da0/dppl__opencl__interface_8h_1a60a68d6cb63216c6954c6d6f4db3b6a4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/d9f/structdp__env" kindref="compound">dp_env</ref>*<sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a60a68d6cb63216c6954c6d6f4db3b6a4" kindref="member">env_t</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="d3/d90/structdp__buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d3/d90/structdp__buffer" kindref="compound">dp_buffer</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73" refid="d3/d90/structdp__buffer_1a67a8a4d388ab614577e22c233282b867" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="d3/d90/structdp__buffer_1a67a8a4d388ab614577e22c233282b867" kindref="member">id_</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>may,<sp/>for<sp/>example,<sp/>be<sp/>a<sp/>cl_mem<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="d3/d90/structdp__buffer_1a9f8fb7b35695dfb16b06ea5358dd4811" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="d3/d90/structdp__buffer_1a9f8fb7b35695dfb16b06ea5358dd4811" kindref="member">buffer_ptr</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stores<sp/>the<sp/>size<sp/>of<sp/>the<sp/>buffer_ptr<sp/>(e.g<sp/>sizeof(cl_mem))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="d3/d90/structdp__buffer_1a55d795a519be758db4697a384ceda73d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d3/d90/structdp__buffer_1a55d795a519be758db4697a384ceda73d" kindref="member">sizeof_buffer_ptr</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="d0/da0/dppl__opencl__interface_8h_1a162ccb3cf5ba5fd158c0526cb59412c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d3/d90/structdp__buffer" kindref="compound">dp_buffer</ref>*<sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a162ccb3cf5ba5fd158c0526cb59412c5" kindref="member">buffer_t</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="d1/d41/structdp__kernel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d1/d41/structdp__kernel" kindref="compound">dp_kernel</ref></highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85" refid="d1/d41/structdp__kernel_1a411402b06ff840a33a3aa1730c8074c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="d1/d41/structdp__kernel_1a411402b06ff840a33a3aa1730c8074c8" kindref="member">id_</ref>;</highlight></codeline>
<codeline lineno="86" refid="d1/d41/structdp__kernel_1a95dd37c1dba4059dd0a0a1af03a5d594" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="d1/d41/structdp__kernel_1a95dd37c1dba4059dd0a0a1af03a5d594" kindref="member">kernel</ref>;</highlight></codeline>
<codeline lineno="87" refid="d1/d41/structdp__kernel_1a5cc090097153e6109e216591700507d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="d1/d41/structdp__kernel_1a5cc090097153e6109e216591700507d9" kindref="member">dump_fn</ref>)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="d0/da0/dppl__opencl__interface_8h_1a4032a461689a915b743ca9d075ad8570" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d1/d41/structdp__kernel" kindref="compound">dp_kernel</ref>*<sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a4032a461689a915b743ca9d075ad8570" kindref="member">kernel_t</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="da/d21/structdp__program" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="da/d21/structdp__program" kindref="compound">dp_program</ref></highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95" refid="da/d21/structdp__program_1a25795513ea0cde7c0716dede44c65c73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="da/d21/structdp__program_1a25795513ea0cde7c0716dede44c65c73" kindref="member">id_</ref>;</highlight></codeline>
<codeline lineno="96" refid="da/d21/structdp__program_1a53c11334b6b4bc028b22febb7780bad2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="da/d21/structdp__program_1a53c11334b6b4bc028b22febb7780bad2" kindref="member">program</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="d0/da0/dppl__opencl__interface_8h_1afad71e6b9f69f779865c7b36fdab8695" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="da/d21/structdp__program" kindref="compound">dp_program</ref>*<sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1afad71e6b9f69f779865c7b36fdab8695" kindref="member">program_t</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="d1/df7/structdp__kernel__arg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d1/df7/structdp__kernel__arg" kindref="compound">dp_kernel_arg</ref></highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104" refid="d1/df7/structdp__kernel__arg_1a367c05865e2577a77cbd98712929aab0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="d1/df7/structdp__kernel__arg_1a367c05865e2577a77cbd98712929aab0" kindref="member">id_</ref>;</highlight></codeline>
<codeline lineno="105" refid="d1/df7/structdp__kernel__arg_1aabfbf93d5c3a937f21ee5220bc202057" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="d1/df7/structdp__kernel__arg_1aabfbf93d5c3a937f21ee5220bc202057" kindref="member">arg_value</ref>;</highlight></codeline>
<codeline lineno="106" refid="d1/df7/structdp__kernel__arg_1a5c1abe8db03d1d824331fcffeb8b7322" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d1/df7/structdp__kernel__arg_1a5c1abe8db03d1d824331fcffeb8b7322" kindref="member">arg_size</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="d0/da0/dppl__opencl__interface_8h_1ad6b9cfe3b0fec6fcd179adf2ed2fa12f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d1/df7/structdp__kernel__arg" kindref="compound">dp_kernel_arg</ref>*<sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1ad6b9cfe3b0fec6fcd179adf2ed2fa12f" kindref="member">kernel_arg_t</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="d5/d48/structdp__runtime" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d5/d48/structdp__runtime" kindref="compound">dp_runtime</ref></highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124" refid="d5/d48/structdp__runtime_1ad785d329557ebd7b6e307e2811a8d60c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="d5/d48/structdp__runtime_1ad785d329557ebd7b6e307e2811a8d60c" kindref="member">id_</ref>;</highlight></codeline>
<codeline lineno="125" refid="d5/d48/structdp__runtime_1abd0a6f9fdd977dd64bd0a7ca14dd4147" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="d5/d48/structdp__runtime_1abd0a6f9fdd977dd64bd0a7ca14dd4147" kindref="member">num_platforms</ref>;</highlight></codeline>
<codeline lineno="126" refid="d5/d48/structdp__runtime_1a5d5bb42519c837eea086b15bf13d2506" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="d5/d48/structdp__runtime_1a5d5bb42519c837eea086b15bf13d2506" kindref="member">platform_ids</ref>;</highlight></codeline>
<codeline lineno="127" refid="d5/d48/structdp__runtime_1abd4319a31c44e42c4af13bba8e1eff4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d48/structdp__runtime_1abd4319a31c44e42c4af13bba8e1eff4f" kindref="member">has_cpu</ref>;</highlight></codeline>
<codeline lineno="128" refid="d5/d48/structdp__runtime_1a4840f2fe8f593e71ee6c3bb44d0ec3ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d48/structdp__runtime_1a4840f2fe8f593e71ee6c3bb44d0ec3ff" kindref="member">has_gpu</ref>;</highlight></codeline>
<codeline lineno="129" refid="d5/d48/structdp__runtime_1aeb6b605ee9b414e5f7c259b6ffd66f5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d9f/structdp__env" kindref="compound">env_t</ref><sp/><ref refid="d5/d48/structdp__runtime_1aeb6b605ee9b414e5f7c259b6ffd66f5c" kindref="member">first_cpu_env</ref>;</highlight></codeline>
<codeline lineno="130" refid="d5/d48/structdp__runtime_1a9350509521cb7b03ca792756c2628906" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d9f/structdp__env" kindref="compound">env_t</ref><sp/><ref refid="d5/d48/structdp__runtime_1a9350509521cb7b03ca792756c2628906" kindref="member">first_gpu_env</ref>;</highlight></codeline>
<codeline lineno="131" refid="d5/d48/structdp__runtime_1a838f0560d243cb2bc828c053c1e87f71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d9f/structdp__env" kindref="compound">env_t</ref><sp/><ref refid="d5/d48/structdp__runtime_1a838f0560d243cb2bc828c053c1e87f71" kindref="member">curr_env</ref>;</highlight></codeline>
<codeline lineno="132" refid="d5/d48/structdp__runtime_1a145de3ba28054f9f29bdb8c955ff9f66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="d5/d48/structdp__runtime_1a145de3ba28054f9f29bdb8c955ff9f66" kindref="member">dump_fn</ref>)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="d0/da0/dppl__opencl__interface_8h_1a02fe9218ba15ed9a5addc7b692d4b8f5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d5/d48/structdp__runtime" kindref="compound">dp_runtime</ref>*<sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a02fe9218ba15ed9a5addc7b692d4b8f5" kindref="member">runtime_t</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1ad2b9b68c935d84e1a63ced32446364d2" kindref="member">set_curr_env</ref><sp/>(<ref refid="d5/d48/structdp__runtime" kindref="compound">runtime_t</ref><sp/>rt,<sp/><ref refid="dd/d9f/structdp__env" kindref="compound">env_t</ref><sp/>env);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1ac831129e3002135ebd37eaf8916fc82e" kindref="member">create_dp_runtime</ref><sp/>(<ref refid="d5/d48/structdp__runtime" kindref="compound">runtime_t</ref><sp/>*rt);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a8867089d47ae5d377403b569ce9eac65" kindref="member">destroy_dp_runtime</ref><sp/>(<ref refid="d5/d48/structdp__runtime" kindref="compound">runtime_t</ref><sp/>*rt);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1ad168b5498c8b9b91471bf8d41dec9687" kindref="member">create_dp_rw_mem_buffer</ref><sp/>(<ref refid="dd/d9f/structdp__env" kindref="compound">env_t</ref><sp/>env_t_ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffsize,<sp/><ref refid="d3/d90/structdp__buffer" kindref="compound">buffer_t</ref><sp/>*buff);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a8fd94758bcf51f2360cb20ece8ef58a4" kindref="member">destroy_dp_rw_mem_buffer</ref><sp/>(<ref refid="d3/d90/structdp__buffer" kindref="compound">buffer_t</ref><sp/>*buff);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a338f2c0033be7bd13ba49e23bf80f8c0" kindref="member">write_dp_mem_buffer_to_device</ref><sp/>(<ref refid="dd/d9f/structdp__env" kindref="compound">env_t</ref><sp/>env_t_ptr,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d90/structdp__buffer" kindref="compound">buffer_t</ref><sp/>buff,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>blocking_copy,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffersize,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data_ptr);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1acada14bf8d4460d9e465b1cca90e6715" kindref="member">read_dp_mem_buffer_from_device</ref><sp/>(<ref refid="dd/d9f/structdp__env" kindref="compound">env_t</ref><sp/>env_t_ptr,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d90/structdp__buffer" kindref="compound">buffer_t</ref><sp/>buff,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>blocking_copy,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffersize,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data_ptr);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a61cd59306e71ead11a06dc762f13c8f7" kindref="member">create_dp_program_from_spirv</ref><sp/>(<ref refid="dd/d9f/structdp__env" kindref="compound">env_t</ref><sp/>env_t_ptr,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*il,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d21/structdp__program" kindref="compound">program_t</ref><sp/>*program_t_ptr);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1ac8c4bca1168ac2e09499474d09f0d0e0" kindref="member">create_dp_program_from_source</ref><sp/>(<ref refid="dd/d9f/structdp__env" kindref="compound">env_t</ref><sp/>env_t_ptr,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**strings,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*lengths,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d21/structdp__program" kindref="compound">program_t</ref><sp/>*program_t_ptr);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a254610fada2ce8e947107f344beddd64" kindref="member">destroy_dp_program</ref><sp/>(<ref refid="da/d21/structdp__program" kindref="compound">program_t</ref><sp/>*program_t_ptr);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a4d7b38c8c2cf3f7a9404c35637a0486e" kindref="member">build_dp_program</ref><sp/>(<ref refid="dd/d9f/structdp__env" kindref="compound">env_t</ref><sp/>env_t_ptr,<sp/><ref refid="da/d21/structdp__program" kindref="compound">program_t</ref><sp/>program_t_ptr);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a4b73910a72c44db86093eac5857a5550" kindref="member">create_dp_kernel</ref><sp/>(<ref refid="dd/d9f/structdp__env" kindref="compound">env_t</ref><sp/>env_t_ptr,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d21/structdp__program" kindref="compound">program_t</ref><sp/>program_ptr,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kernel_name,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d41/structdp__kernel" kindref="compound">kernel_t</ref><sp/>*kernel_ptr);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a0a75e78559fb5d2f7077b7e85a7b49bd" kindref="member">destroy_dp_kernel</ref><sp/>(<ref refid="d1/d41/structdp__kernel" kindref="compound">kernel_t</ref><sp/>*kernel_ptr);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1aa49f0c518b4f6245daf5f633a96c4a77" kindref="member">create_dp_kernel_arg</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_value,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>arg_size,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/df7/structdp__kernel__arg" kindref="compound">kernel_arg_t</ref><sp/>*kernel_arg_t_ptr);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a2ca3be92f3c4a5893480179a22b1fe79" kindref="member">create_dp_kernel_arg_from_buffer</ref><sp/>(<ref refid="d3/d90/structdp__buffer" kindref="compound">buffer_t</ref><sp/>*buffer_t_ptr,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/df7/structdp__kernel__arg" kindref="compound">kernel_arg_t</ref><sp/>*kernel_arg_t_ptr);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1ad4e5e4079114d83c6b18c9563ab8ea54" kindref="member">destroy_dp_kernel_arg</ref><sp/>(<ref refid="d1/df7/structdp__kernel__arg" kindref="compound">kernel_arg_t</ref><sp/>*kernel_arg_t_ptr);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a80c549645f93a14408c09f8d40749bd3" kindref="member">set_args_and_enqueue_dp_kernel</ref><sp/>(<ref refid="dd/d9f/structdp__env" kindref="compound">env_t</ref><sp/>env_t_ptr,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d41/structdp__kernel" kindref="compound">kernel_t</ref><sp/>kernel_t_ptr,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nargs,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/df7/structdp__kernel__arg" kindref="compound">kernel_arg_t</ref><sp/>*args,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>work_dim,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*global_work_offset,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*global_work_size,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*local_work_size);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a29493fd687e0217843648b202f167ce6" kindref="member">set_args_and_enqueue_dp_kernel_auto_blocking</ref><sp/>(<ref refid="dd/d9f/structdp__env" kindref="compound">env_t</ref><sp/>env_t_ptr,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d41/structdp__kernel" kindref="compound">kernel_t</ref><sp/>kernel_t_ptr,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nargs,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/df7/structdp__kernel__arg" kindref="compound">kernel_arg_t</ref><sp/>*args,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_dims,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*dim_starts,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*dim_stops);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1aff3bac7c4d9ae09bae17078e5d25d97f" kindref="member">retain_dp_context</ref><sp/>(<ref refid="dd/d9f/structdp__env" kindref="compound">env_t</ref><sp/>env_t_ptr);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><ref refid="d0/da0/dppl__opencl__interface_8h_1a81776019eae18623511d676145f7cdef" kindref="member">DPPL_API</ref></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/da0/dppl__opencl__interface_8h_1a7ae58d6b8a43ca75c9b7600e660fe30c" kindref="member">release_dp_context</ref><sp/>(<ref refid="dd/d9f/structdp__env" kindref="compound">env_t</ref><sp/>env_t_ptr);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//----<sp/>TODO:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.<sp/>Add<sp/>release/retain<sp/>methods<sp/>for<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//---------</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/diptorupd/Desktop/devel/dpctl/backends/include/dppl_opencl_interface.h"/>
  </compounddef>
</doxygen>
